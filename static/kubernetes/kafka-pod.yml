apiVersion: v1
kind: Pod
metadata:
  name: local-kafka
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5556"
  labels:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: local
spec:
  containers:
  - name: metrics
    image: "solsson/kafka-prometheus-jmx-exporter@sha256:a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8"
    command:
    - sh
    - -exc
    - |
      trap "exit 0" TERM; \
      while :; do \
      java \
      -XX:+UnlockExperimentalVMOptions \
      -XX:+UseCGroupMemoryLimitForHeap \
      -XX:MaxRAMFraction=1 \
      -XshowSettings:vm \
      -jar \
      jmx_prometheus_httpserver.jar \
      "5556" \
      /etc/jmx-kafka/jmx-kafka-prometheus.yml & \
      wait $! || sleep 3; \
      done
    ports:
    - containerPort: 5556
      name: prometheus
    resources:
      {}
      
    volumeMounts:
    - name: jmx-config
      mountPath: /etc/jmx-kafka
  - name: kafka-broker
    image: "confluentinc/cp-kafka:5.0.1"
    imagePullPolicy: "IfNotPresent"
    livenessProbe:
      exec:
        command:
          - sh
          - -ec
          - /usr/bin/jps | /bin/grep -q SupportedKafka
      initialDelaySeconds: 30
      timeoutSeconds: 5
    readinessProbe:
      tcpSocket:
        port: kafka
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 3
    ports:
    - containerPort: 9092
      name: kafka
    - containerPort: 5555
      name: jmx
    resources:
      {}
      
    env:
    - name: JMX_PORT
      value: "5555"
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: KAFKA_HEAP_OPTS
      value: -Xmx1G -Xms1G
    - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
      value: "3"
    - name: KAFKA_ZOOKEEPER_CONNECT
      value: "local-zookeeper:2181"
    - name: KAFKA_LOG_DIRS
      value: "/opt/kafka/data/logs"
    - name: "KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE"
      value: "false"
    - name: KAFKA_JMX_PORT
      value: "5555"
    # This is required because the Downward API does not yet support identification of
    # pod numbering in statefulsets. Thus, we are required to specify a command which
    # allows us to extract the pod ID for usage as the Kafka Broker ID.
    # See: https://github.com/kubernetes/kubernetes/issues/31218
    command:
    - sh
    - -exc
    - |
      unset KAFKA_PORT && \
      export KAFKA_BROKER_ID=${POD_NAME##*-} && \
      export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_IP}:9092 && \
      exec /etc/confluent/docker/run
    volumeMounts:
    - name: datadir
      mountPath: "/opt/kafka/data"
  volumes:
  - name: jmx-config
    configMap:
      name: local-kafka-metrics
  terminationGracePeriodSeconds: 60
